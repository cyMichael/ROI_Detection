# Example Configuration for ROI Detection Pipeline
# Copy this file to config.yaml and update the paths with your actual data locations

# Experiment Configuration
experiment:
  name: "pcla_3class"
  description: "Automated ROI Detection Pipeline - Example"
  version: "1.0"

# Data Paths - UPDATE THESE WITH YOUR ACTUAL PATHS
data:
  # Input data directories
  data_dir: "/path/to/your/h5/files"  # Directory containing .h5 files
  csv_path: "/path/to/your/metadata.csv"  # CSV file with slide_id, data_split, label_name
  wsi_dir: "/path/to/your/svs/files"  # Directory containing .svs files
  
  # Annotation directories
  xml_annotation_new: "/path/to/annotations/new"
  xml_annotation_other: "/path/to/annotations/other"
  xml_dir: "/path/to/ground/truth/labels"  # For visualization
  
  # Output directories
  feat_dir: "/path/to/save/extracted/patches"  # Extracted patches
  results_dir: "/path/to/save/results"  # All results
  models_save_folder: "./saved_models/"  # Trained models
  classification_save_dir: "/path/to/save/classification/results"

# Model Configuration
model:
  architecture: "vgg16"
  num_classes: 3
  batch_size: 32  # Reduced for smaller GPUs
  n_epochs: 20
  learning_rate: 5e-4
  weight_decay: 1e-4
  patience: 20  # Early stopping patience
  start_epoch: 0

# Patch Configuration
patches:
  patch_size: 256
  target_patch_size: -1  # -1 means no scaling
  annotation_ratio: 0.5  # Ratio for in-region detection

# Visualization Configuration
visualization:
  percent: 0.2  # Top percentage for visualization
  generate_heatmap: true
  generate_boundary: true
  generate_overlay: true
  auto_skip: true  # Skip existing files

# Normalization Parameters (from method_pcla_3class.py)
normalization:
  mean: [0.6632, 0.4123, 0.5529]
  std: [0.1618, 0.1749, 0.1478]

# Pipeline Control
pipeline:
  # Which steps to run
  extract_patches: true
  train_model: true
  score_patches: true
  generate_visualizations: true
  run_analysis: true
  
  # Skip steps if outputs exist
  skip_existing: true
  
  # Clean up intermediate files
  cleanup_intermediate: false

# Logging Configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR
  log_file: "pipeline.log"
  log_to_console: true

# Hardware Configuration
hardware:
  use_gpu: true
  num_workers: 4  # For data loading
  pin_memory: true
